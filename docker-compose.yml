version: '3'
services:
  postgres:
    image: postgres
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    container_name: docker-postgres
  graphql-engine-crm-dev:
    image: hasura/graphql-engine:v1.0.0-beta.2
    ports:
    - "8081:8080"
    depends_on:
    - "postgres"
    container_name: hasura-crm-dev
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "${DEFAULT_POSTGRES_STRING}/${CRM_DATABASE}"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"

      # Here is the auth hook of hasura || Checking authentication
      # HASURA_GRAPHQL_AUTH_HOOK: "${BASE_CRM_SERVERLESS_URL}/auth"
      # HASURA_GRAPHQL_AUTH_HOOK_MODE: POST

      # Add admin secret for accessing hasura with more security ( Private )
      # HASURA_GRAPHQL_ADMIN_SECRET: dara

      # Variables below are for event trigger of Hasura
      # ENCRYPT_PIN: "${BASE_CRM_SERVERLESS_URL}/encryptPin"
      # ACTIVITIES: "${BASE_CRM_SERVERLESS_URL}/activities"
      # SCORE: "${BASE_CRM_SERVERLESS_URL}/scoring"
      # SYNC_EKYM: "${BASE_CRM_SERVERLESS_URL}/syncEkym"

  graphql-engine-ekmc-dev:
    image: hasura/graphql-engine:v1.0.0-beta.2
    ports:
    - "8082:8080"
    depends_on:
    - "postgres"
    restart: always
    container_name: hasura-ekmc-dev
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "${DEFAULT_POSTGRES_STRING}/${EKMC_DATABASE}"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"

      # Here is the auth hook of hasura || Checking authentication
      # HASURA_GRAPHQL_AUTH_HOOK: "${BASE_EKMC_SERVERLESS_URL}/auth"
      # HASURA_GRAPHQL_AUTH_HOOK_MODE: POST

      # Add admin secret for accessing hasura with more security ( Private )
      # HASURA_GRAPHQL_ADMIN_SECRET: dara

      # Variables below are for event trigger of Hasura
      # ENCRYPT_PIN: "${BASE_EKMC_SERVERLESS_URL}/encryptPin"
      # ACTIVITIES: "${BASE_EKMC_SERVERLESS_URL}/activities"
volumes:
  db_data:
